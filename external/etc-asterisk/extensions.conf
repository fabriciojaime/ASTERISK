[general]
static=yes
writeprotect=no
;autofallthrough=no
;extenpatternmatchnew=no
clearglobalvars=no
;userscontext=default

[globals]
CONSOLE=Console/dsp				; Console interface for demo
;CONSOLE=DAHDI/1
;CONSOLE=Phone/phone0
IAXINFO=guest					; IAXtel username/password
;IAXINFO=myuser:mypass
TRUNK=DAHDI/G2					; Trunk interface
TRUNKMSD=1					; MSD digits to strip (usually 1 or 0)
;TRUNK=IAX2/user:pass@provider
;FREENUMDOMAIN=mydomain.com                     ; domain to send on outbound

[test]
exten => _*20ZXX,1,Answer
        same => n,Verbose(${EXTEN:3:3} LOGIN)
        same => n,GoSub(AUTH-AGENT,s,1(${EXTEN:3:3}))
	same => n,GoSub(MGR-AGENT,s,1(${EXTEN:3:3},REMOVE))
        same => n,GoSub(MGR-AGENT,s,1(${EXTEN:3:3},ADD))
        same => n,Playback(agent-loginok)
        same => n,Hangup

exten => _*21ZXX,1,Answer
	same => n,Verbose(${EXTEN:3:3} LOGOUT)
        same => n,GoSub(AUTH-AGENT,s,1(${EXTEN:3:3}))
	same => n,GoSub(MGR-AGENT,s,1(${EXTEN:3:3},REMOVE))
	same => n,Playback(agent-loggedoff)
	same => n,Hangup

exten => _*22ZXX,1,Answer
        same => n,Verbose(${EXTEN:3:3} PAUSE)
        same => n,GoSub(AUTH-AGENT,s,1(${EXTEN:3:3}))
        same => n,GoSub(MGR-AGENT,s,1(${EXTEN:3:3},PAUSE))
        same => n,Playback(agent-loggedoff)
        same => n,Hangup

exten => _*23ZXX,1,Answer
        same => n,Verbose(${EXTEN:3:3} UNPAUSE)
        same => n,GoSub(AUTH-AGENT,s,1(${EXTEN:3:3}))
        same => n,GoSub(MGR-AGENT,s,1(${EXTEN:3:3},UNPAUSE))
        same => n,Playback(agent-loginok)
        same => n,Hangup


[AUTH-AGENT]
exten => s,1,Verbose(1,${ARG1} ATTEMP LOGIN)
        same => n,Set(fails=0)
        same => n(rpt),Read(ipt_pass,vm-password,6,,1,10)
        same => n,Set(agt_name=${AGENT_CHK_LOGIN(${ARG1},${ipt_pass})})
        same => n,GoToIf($[${ODBCROWS}]?ok)
        same => n,Set(fails=$[${fails}+1])
        same => n,Playback(sorry_login_incorrect)
        same => n,GoToIf($[${fails} < 3]?rpt)
        same => n,Background(goodbye)
        same => n,Hangup
	same => n(ok),Verbose(1,WELCOME ${agt_name})
	same => n,Return

[MGR-AGENT]
exten => s,1,Set(AGTID=${ARG1})
	same => n,Set(FX=${ARG2})
	same => n,Set(QUERY=${IF( $["${FX}"="ADD"] ? AGENT_QUEUES : QUEUES_CH_IN_USE )})
	same => n,Set(IDX=${${QUERY}(${AGTID},${CUT(CHANNEL,-,1)})})
        same => n,GoToIf($[${ODBCROWS} < 1]?no_rows)
        same => n,Set(COUNTER=1)
        same => n,While($[${COUNTER}<=${ODBCROWS}])
        same => n,Set(ARRAY(agt_id,agt_name,agt_queue,agt_channel)=${ODBC_FETCH(${IDX})})
        same => n,GoSub(${FX}-AGT-QUEUE,s,1(${agt_id},${agt_name},${agt_queue},${agt_channel}))
        same => n,Set(COUNTER=$[${COUNTER} + 1])
        same => n,EndWhile
	same => n,ODBCFinish
        same => n,Return
	same => n(no_rows),Verbose(1,NOTHING TO DO)
	same => n,Return

[ADD-AGT-QUEUE]
exten => s,1,Verbose(1,ADDING ${ARG2} IN THE QUEUE ${ARG3})
	same => n,AddQueueMember(${ARG3},${CUT(CHANNEL,-,1)},,,${ARG1}|${ARG2}|${CUT(CHANNEL,-,1)})
	same => n,Return(${AQMSTATUS})

[REMOVE-AGT-QUEUE]
exten => s,1,Verbose(1,REMOVING ${ARG2} FROM THE QUEUE ${ARG3})
        same => n,RemoveQueueMember(${ARG3},${ARG4})
        same => n,Return(${AQMSTATUS})

[PAUSE-AGT-QUEUE]
exten => s,1,Verbose(1,PAUSING ${ARG2} IN THE QUEUE ${ARG3})
        same => n,PauseQueueMember(${ARG3},${ARG4})
        same => n,Return(${AQMSTATUS})

[UNPAUSE-AGT-QUEUE]
exten => s,1,Verbose(1,UNPAUSING ${ARG2} FROM THE QUEUE ${ARG3})
	same => n,UnpauseQueueMember(${ARG3},${ARG4})
	same => n,Return(${AQMSTATUS})
